import { Options as HTML2CanvasOptions } from 'html2canvas';
import { Component } from 'react';
export type UseGenerateImage<T extends HTMLElement = HTMLDivElement> = [
    (callback?: BlobCallback) => Promise<string | undefined>,
    {
        isLoading: boolean;
        ref: React.MutableRefObject<T | null>;
    }
];
export type UseGenerateImageArgs = {
    options?: HTML2CanvasOptions;
    quality?: number;
    type?: string;
};
/**
 * @param {{options: HTML2CanvasOptions, type: string, quality: number}} [args] Optional arguments.
 * @param {HTML2CanvasOptions} [args.options] An html2canvas Options object.
 * @param {number} [args.quality] Applies if the type is an image format that supports variable quality (such as "image/jpeg"), and is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.
 * @param {string} [args.type] Controls the type of the image to be returned (e.g. PNG or JPEG). The default is "image/png"; that type is also used if the given type isn't supported.
 *
 * [Reference: html.spec.whatwg.org](https://html.spec.whatwg.org/multipage/canvas.html#dom-canvas-todataurl-dev)
 */
export declare function useGenerateImage<T extends HTMLElement = HTMLDivElement>(args?: UseGenerateImageArgs): UseGenerateImage<T>;
export type UseCurrentPng = [
    (callback?: BlobCallback) => Promise<string | undefined>,
    {
        isLoading: boolean;
        ref: React.MutableRefObject<any>;
    }
];
/**
 * @param options - optional html2canvas Options object
 */
export declare function useCurrentPng(options?: Partial<HTML2CanvasOptions>): UseCurrentPng;
export interface CurrentPngProps {
    chartRef: React.RefObject<any>;
    getPng: (options?: Partial<HTML2CanvasOptions>) => Promise<string | undefined>;
    isLoading: boolean;
}
interface Props {
    children: (props: CurrentPngProps) => React.ReactNode;
}
interface State {
    isLoading: boolean;
}
export declare class CurrentPng extends Component<Props, State> {
    private chartRef;
    state: State;
    getPng: (options?: Partial<HTML2CanvasOptions>) => Promise<string | undefined>;
    render(): import("react").ReactNode;
}
export {};
